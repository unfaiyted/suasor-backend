// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"context"
	"gorm.io/gorm"
	mediatypes "suasor/client/media/types"
	"suasor/handlers"
	"suasor/services"
)

// InitializeMediaListHandlers is the Wire-generated constructor function
// This is what Wire would generate based on the providers we defined
func InitializeMediaListHandlers(ctx context.Context) (
	handlers.UserListHandler[*mediatypes.Playlist],
	handlers.UserListHandler[*mediatypes.Collection],
	error,
) {
	db, err := ProvideDB()
	if err != nil {
		return nil, nil, err
	}
	
	factory := ProvideMediaDataFactory(db)
	
	coreRepos := ProvideCoreMediaItemRepositories(factory)
	userRepos := ProvideUserMediaItemRepositories(factory)
	userDataRepos := ProvideUserMediaDataRepositories(factory)
	
	// Create playlist-related components
	playlistCoreService := services.NewCoreMediaItemService[*mediatypes.Playlist](coreRepos.PlaylistRepo())
	playlistCoreListService := ProvideCoreListServiceForPlaylist(coreRepos)
	playlistCoreItemHandler := ProvideCoreMediaItemHandlerForPlaylist(playlistCoreService)
	playlistCoreListHandler := ProvideCoreListHandlerForPlaylist(playlistCoreItemHandler, playlistCoreListService)
	playlistUserItemService := services.NewUserMediaItemService[*mediatypes.Playlist](
		playlistCoreService, 
		userRepos.PlaylistUserRepo(),
	)
	playlistUserListService := ProvideUserListServiceForPlaylist(
		playlistCoreListService, 
		userRepos, 
		userDataRepos,
	)
	playlistUserListHandler := ProvideUserListHandlerForPlaylist(
		playlistCoreListHandler, 
		playlistUserItemService, 
		playlistUserListService,
	)
	
	// Create collection-related components
	collectionCoreService := services.NewCoreMediaItemService[*mediatypes.Collection](coreRepos.CollectionRepo())
	collectionCoreListService := ProvideCoreListServiceForCollection(coreRepos)
	collectionCoreItemHandler := ProvideCoreMediaItemHandlerForCollection(collectionCoreService)
	collectionCoreListHandler := ProvideCoreListHandlerForCollection(collectionCoreItemHandler, collectionCoreListService)
	collectionUserItemService := services.NewUserMediaItemService[*mediatypes.Collection](
		collectionCoreService, 
		userRepos.CollectionUserRepo(),
	)
	collectionUserListService := ProvideUserListServiceForCollection(
		collectionCoreListService, 
		userRepos, 
		userDataRepos,
	)
	collectionUserListHandler := ProvideUserListHandlerForCollection(
		collectionCoreListHandler, 
		collectionUserItemService, 
		collectionUserListService,
	)
	
	return playlistUserListHandler, collectionUserListHandler, nil
}