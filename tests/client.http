###

# @name login
POST http://localhost:8080/api/v1/auth/login HTTP/1.1
Content-Type: application/json

{
  "email": "admin@dev.com",
  "password": "TestPassword123"
}

###

# @name createEmbyClient
POST http://localhost:8080/api/v1/admin/client/emby HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Emby",
  "clientType": "emby",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "emby",
        "category": "media",
        "name": "Emby",
        "baseURL": "http://192.168.1.100:8096",
        "enabled": true,
        "validateConn": true
      },
      "clientType": "emby",
      "baseURL": "http://192.168.1.100:8096",
      "apiKey": "your-emby-apikey",
      "ssl": false
    },
    "username": "admin"
  }
}

###

# @name GetEmbyClients
GET http://localhost:8080/api/v1/admin/client/emby HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}



###

# @name GetMovieByID
# @require embyClient
# @after embyClient
GET http://localhost:8080/api/v1/client/{{GetEmbyClients.response.body.$.data[0].id}}/movie/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}



###

# @name createJellyfinClient
POST http://localhost:8080/api/v1/admin/client/jellyfin HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Jellyfin",
  "clientType": "jellyfin",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "jellyfin",
        "category": "media",
        "name": "Jellyfin",
        "baseURL": "http://192.168.1.101:9097",
        "enabled": true,
        "validateConn": true
      },
      "clientType": "jellyfin",
      "baseURL": "http://192.168.1.101:9097",
      "apiKey": "your-jellyfin-apikey",
      "ssl": false
    },
    "username": "admin"
  }
}

###

# @name createLidarrClient
POST http://localhost:8080/api/v1/admin/client/lidarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Lidarr",
  "clientType": "lidarr",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "lidarr",
        "category": "automation",
        "name": "Lidarr",
        "baseURL": "http://192.168.1.102:8686",
        "enabled": true,
        "validateConn": true
      },
      "clientType": "lidarr",
      "baseURL": "http://192.168.1.102:8686",
      "apiKey": "your-lidarr-apikey",
      "ssl": false
    }
  }
}

###

# @name createRadarrClient
POST http://localhost:8080/api/v1/client/radarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Radarr",
  "clientType": "radarr",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "radarr",
        "category": "automation",
        "name": "Radarr",
        "baseURL": "http://192.168.1.103:7878",
        "enabled": true,
        "validateConn": true
      },
      "clientType": "radarr",
      "baseURL": "http://192.168.1.103:7878",
      "apiKey": "your-radarr-apikey",
      "ssl": false
    }
  }
}

###

# @name createSonarrClient
POST http://localhost:8080/api/v1/client/sonarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Sonarr",
  "clientType": "sonarr",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "sonarr",
        "category": "automation",
        "name": "Sonarr",
        "baseURL": "http://192.168.1.104:8989",
        "enabled": true,
        "validateConn": true
      },
      "clientType": "sonarr",
      "baseURL": "http://192.168.1.104:8989",
      "apiKey": "your-sonarr-apikey",
      "ssl": false
    }
  }
}

###

# @name createSubsonicClient
POST http://localhost:8080/api/v1/client/subsonic HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Subsonic",
  "clientType": "subsonic",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "subsonic",
        "category": "media",
        "name": "Subsonic",
        "baseURL": "http://192.168.1.105:4533",
        "enabled": true,
        "validateConn": true
      },
      "clientType": "subsonic",
      "baseURL": "http://192.168.1.105:4533",
      "username": "admin",
      "password": "your-password",
      "ssl": false
    }
  }
}

###

# @name createPlexClient
POST http://localhost:8080/api/v1/client/plex HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Plex",
  "clientType": "plex",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "plex",
        "category": "media",
        "name": "Plex",
        "baseURL": "http://192.168.1.106:32400",
        "enabled": true,
        "validateConn": true
      },
      "clientType": "plex",
      "baseURL": "http://192.168.1.106:32400",
      "token": "your-plex-token",
      "ssl": false
    }
  }
}

###

# @name createClaudeClient
POST http://localhost:8080/api/v1/client/claude HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Claude",
  "clientType": "claude",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "claude",
        "category": "ai",
        "name": "Claude",
        "baseURL": "https://api.anthropic.com",
        "enabled": true,
        "validateConn": true
      },
      "clientType": "claude",
      "baseURL": "https://api.anthropic.com",
      "apiKey": "your-claude-api-key",
      "model": "claude-3-haiku-20240307",
      "temperature": 0.7,
      "maxTokens": 1000,
      "maxContextTokens": 100000
    }
  }
}

###

# @name createOpenAIClient
POST http://localhost:8080/api/v1/client/openai HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "OpenAI",
  "clientType": "openai",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "openai",
        "category": "ai",
        "name": "OpenAI",
        "baseURL": "https://api.openai.com",
        "enabled": true,
        "validateConn": false
      },
      "clientType": "openai",
      "baseURL": "https://api.openai.com",
      "apiKey": "your-openai-api-key",
      "model": "gpt-4",
      "temperature": 0.7,
      "maxTokens": 1000,
      "maxContextTokens": 8192
    }
  }
}

###

# @name createOllamaClient
POST http://localhost:8080/api/v1/client/ollama HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Ollama",
  "clientType": "ollama",
  "isEnabled": true,
  "config": {
    "details": {
      "core": {
        "type": "ollama",
        "category": "ai",
        "name": "Ollama",
        "baseURL": "http://localhost:11434",
        "enabled": true,
        "validateConn": false
      },
      "clientType": "ollama",
      "baseURL": "http://localhost:11434",
      "model": "llama2",
      "temperature": 0.7,
      "maxTokens": 1000,
      "maxContextTokens": 8192
    }
  }
}

###

# @name updateEmbyClient
PUT http://localhost:8080/api/v1/admin/client/{{createEmbyClient.response.body.$.data.id}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Emby (Updated)",
  "clientType": "emby",
  "isEnabled": false,
  "config": {
    "details": {
      "core": {
        "type": "emby",
        "category": "media",
        "name": "Emby (Updated)",
        "baseURL": "http://192.168.1.100:8096",
        "enabled": false,
        "validateConn": true
      },
      "clientType": "emby",
      "baseURL": "http://192.168.1.100:8096",
      "apiKey": "your-emby-apikey",
      "ssl": false
    },
    "username": "admin"
  }
}

###

# Get all clients without filtering
# @name getAllClients
GET http://localhost:8080/api/v1/clients HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only media clients (emby, jellyfin, plex, subsonic, sonarr, radarr, lidarr)
# @name getMediaClients
GET http://localhost:8080/api/v1/clients?type=media HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Jellyfin clients
# @name getJellyfinClients
GET http://localhost:8080/api/v1/clients?clientType=jellyfin HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Emby clients
# @name getEmbyClients
GET http://localhost:8080/api/v1/clients?clientType=emby HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Radarr clients
# @name getRadarrClients
GET http://localhost:8080/api/v1/clients?clientType=radarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Sonarr clients
# @name getSonarrClients
GET http://localhost:8080/api/v1/clients?clientType=sonarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Lidarr clients
# @name getLidarrClients
GET http://localhost:8080/api/v1/clients?clientType=lidarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Subsonic clients
# @name getSubsonicClients
GET http://localhost:8080/api/v1/clients?clientType=subsonic HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only OpenAI clients
# @name getOpenAIClients
GET http://localhost:8080/api/v1/clients?clientType=openai HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Claude clients
# @name getClaudeClients
GET http://localhost:8080/api/v1/clients?clientType=claude HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Ollama clients
# @name getOllamaClients
GET http://localhost:8080/api/v1/clients?clientType=ollama HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get clients of a non-existent type (should return empty array)
# @name getNonExistentTypeClients
GET http://localhost:8080/api/v1/clients?clientType=nonexistent HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}
