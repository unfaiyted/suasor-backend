###

# @name login
POST http://localhost:8080/api/v1/auth/login HTTP/1.1
Content-Type: application/json

{
  "email": "admin@dev.com",
  "password": "TestPassword123"
}

###

# @name createEmbyClient
POST http://localhost:8080/api/v1/admin/client/emby HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Emby",
  "clientType": "emby",
  "isEnabled": true,
  "client": {
    "baseURL": "http://192.168.1.100:8096",
    "apiKey": "your-emby-apikey",
    "username": "admin",
    "ssl": false
  }
}

###

# @name GetEmbyClients
GET http://localhost:8080/api/v1/admin/client/emby HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}



###

# @name GetMovieByID
# @require embyClient
# @after embyClient
GET http://localhost:8080/api/v1/client/{{GetEmbyClients.response.body.$.data[0].id}}/media/movie/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}



###

# @name createJellyfinClient
POST http://localhost:8080/api/v1/client/jellyfin HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Jellyfin",
  "clientType": "jellyfin",
  "client": {
    "enabled": true,
    "baseURL": "http://192.168.1.101:9097",
    "apiKey": "your-jellyfin-apikey",
    "username": "admin",
    "ssl": false
  }
}

###

# @name createLidarrClient
POST http://localhost:8080/api/v1/client/lidarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Lidarr",
  "clientType": "lidarr",
  "client": {
    "baseURL": "http://192.168.1.102:8686",
    "apiKey": "your-lidarr-apikey",
    "username": "admin",
    "ssl": false
  }
}

###

# @name createRadarrClient
POST http://localhost:8080/api/v1/client/radarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Radarr",
  "clientType": "radarr",
  "client": {
    "baseURL": "http://192.168.1.103:7878",
    "apiKey": "your-radarr-apikey",
    "username": "admin",
    "ssl": false
  }
}

###

# @name createSonarrClient
POST http://localhost:8080/api/v1/client/sonarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Sonarr",
  "clientType": "sonarr",
  "client": {
    "baseURL": "http://192.168.1.104:8989",
    "apiKey": "your-sonarr-apikey",
    "username": "admin",
    "ssl": false
  }
}

###

# @name createSubsonicClient
POST http://localhost:8080/api/v1/client/subsonic HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Subsonic",
  "clientType": "subsonic",
  "client": {
    "host": "192.168.1.105",
    "port": 4533,
    "username": "admin",
    "password": "your-password",
    "ssl": false
  }
}

###

# @name createEmbyClient
POST http://localhost:8080/api/v1/client/emby HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Emby",
  "clientType": "emby",
  "client": {
    "baseURL": "http://192.168.1.100:8096",
    "apiKey": "your-emby-apikey",
    "username": "admin",
    "ssl": false
  }
}

###

# @name updateEmbyClient
PUT http://localhost:8080/api/v1/admin/client/emby/{{createEmbyClient.response.body.$.data.id}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Emby (Updated)",
  "clientType": "emby",
  "isEnabled": false,
  "client": {
    "baseURL": "http://192.168.1.100:8096",
    "apiKey": "your-emby-apikey",
    "username": "admin",
    "ssl": false
  }
}

###

# Get all clients without filtering
# @name getAllClients
GET http://localhost:8080/api/v1/clients HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only media clients (emby, jellyfin, plex, subsonic, sonarr, radarr, lidarr)
# @name getMediaClients
GET http://localhost:8080/api/v1/clients?type=media HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Jellyfin clients
# @name getJellyfinClients
GET http://localhost:8080/api/v1/clients?clientType=jellyfin HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Emby clients
# @name getEmbyClients
GET http://localhost:8080/api/v1/clients?clientType=emby HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Radarr clients
# @name getRadarrClients
GET http://localhost:8080/api/v1/clients?clientType=radarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Sonarr clients
# @name getSonarrClients
GET http://localhost:8080/api/v1/clients?clientType=sonarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Lidarr clients
# @name getLidarrClients
GET http://localhost:8080/api/v1/clients?clientType=lidarr HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Subsonic clients
# @name getSubsonicClients
GET http://localhost:8080/api/v1/clients?clientType=subsonic HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only OpenAI clients
# @name getOpenAIClients
GET http://localhost:8080/api/v1/clients?clientType=openai HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Claude clients
# @name getClaudeClients
GET http://localhost:8080/api/v1/clients?clientType=claude HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get only Ollama clients
# @name getOllamaClients
GET http://localhost:8080/api/v1/clients?clientType=ollama HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

###

# Get clients of a non-existent type (should return empty array)
# @name getNonExistentTypeClients
GET http://localhost:8080/api/v1/clients?clientType=nonexistent HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}
