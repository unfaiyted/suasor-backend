### Media Lists Tests
# This file contains HTTP tests for media list operations
# These tests focus on creating and managing media lists (collections, playlists, etc.)

### Login to get access token
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{TEST_ADMIN_USER}}",
  "password": "{{TEST_ADMIN_PASSWORD}}"
}

### Create a test movie for list operations
# @name createTestMovie
POST {{baseUrl}}/media/movie
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "title": "List Test Movie",
  "originalTitle": "List Test Movie Original",
  "overview": "This is a test movie for list operations",
  "releaseDate": "2023-01-01",
  "runtime": 120,
  "genres": ["Action", "Drama"],
  "directors": ["Test Director"],
  "writers": ["Test Writer"],
  "cast": ["Actor 1", "Actor 2"],
  "posterURL": "https://example.com/poster.jpg",
  "backdropURL": "https://example.com/backdrop.jpg",
  "rating": 8.5
}

### Create a second test movie
# @name createSecondTestMovie
POST {{baseUrl}}/media/movie
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "title": "List Test Movie 2",
  "originalTitle": "List Test Movie 2 Original",
  "overview": "This is a second test movie for list operations",
  "releaseDate": "2023-02-01",
  "runtime": 110,
  "genres": ["Comedy", "Romance"],
  "directors": ["Test Director 2"],
  "writers": ["Test Writer 2"],
  "cast": ["Actor 3", "Actor 4"],
  "posterURL": "https://example.com/poster2.jpg",
  "backdropURL": "https://example.com/backdrop2.jpg",
  "rating": 7.5
}

### Create a movie collection/list
# @name createMovieList
POST {{baseUrl}}/lists
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Test Movie Collection",
  "description": "A collection of test movies",
  "itemType": "movie",
  "isPublic": true,
  "tags": ["test", "movies"]
}

### Add movie to list
# @name addMovieToList
POST {{baseUrl}}/lists/{{createMovieList.response.body.$.data.id}}/items
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "mediaItemId": {{createTestMovie.response.body.$.data.id}},
  "sortOrder": 1
}

### Add second movie to list
# @name addSecondMovieToList
POST {{baseUrl}}/lists/{{createMovieList.response.body.$.data.id}}/items
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "mediaItemId": {{createSecondTestMovie.response.body.$.data.id}},
  "sortOrder": 2
}

### Get list items
# @name getListItems
GET {{baseUrl}}/lists/{{createMovieList.response.body.$.data.id}}/items
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

### Get all lists
# @name getAllLists
GET {{baseUrl}}/lists
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

### Get list by ID
# @name getListById
GET {{baseUrl}}/lists/{{createMovieList.response.body.$.data.id}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

### Update list
# @name updateList
PUT {{baseUrl}}/lists/{{createMovieList.response.body.$.data.id}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

{
  "name": "Updated Test Movie Collection",
  "description": "An updated collection of test movies",
  "isPublic": true,
  "tags": ["test", "movies", "updated"]
}

### Get lists by user
# @name getUserLists
GET {{baseUrl}}/user/{{TEST_USER_ID}}/lists
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

### Get lists by type
# @name getListsByType
GET {{baseUrl}}/lists?type=movie
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

### Remove item from list
# @name removeItemFromList
DELETE {{baseUrl}}/lists/{{createMovieList.response.body.$.data.id}}/items/{{createSecondTestMovie.response.body.$.data.id}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

### Delete list
# @name deleteList
DELETE {{baseUrl}}/lists/{{createMovieList.response.body.$.data.id}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

### Cleanup test movies
# @name cleanupTestMovies
DELETE {{baseUrl}}/media/movie/{{createTestMovie.response.body.$.data.id}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}

DELETE {{baseUrl}}/media/movie/{{createSecondTestMovie.response.body.$.data.id}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.accessToken}}